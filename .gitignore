# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a CI script
#  and should be ignored out of version control.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/

# Django stuff (if you ever use it, good to have)
# *.log  # Covered by generic *.log below
# local_settings.py
# db.sqlite3
# db.sqlite3-journal

# Flask stuff
instance/
*.sqlite
*.sqlite3

# Jupyter Notebook
.ipynb_checkpoints

# Virtual Environments
.env
env/
venv/
.venv/
ENV/
VENV/

# Conda environments
.conda

# Sphinx documentation
docs/_build/

# PyCharm files
.idea/

# VSCode
.vscode/

# Spyder project settings
.spyderproject
.spyderworkspace

# Rope project settings
.ropeproject

# Operating System Files
.DS_Store
Thumbs.db

# Log files
*.log
logs/

# Temporary files
*.swp
*~
*.tmp

# Configuration files that might contain secrets (be careful with these)
# config.py
# settings.ini
# .env.*local

# PyForge specific (if any, like local agent data if not already handled)
# agents.json # If this is meant to be dynamically generated and not versioned
# pyforge_engine/workspaces/ # If workspaces are created locally and shouldn't be versioned
# pyforge_engine/artifacts/ # If artifacts are stored locally and shouldn't be versioned